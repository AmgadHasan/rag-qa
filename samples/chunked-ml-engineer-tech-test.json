[
    "Agent Framework for RAG-Based Question Generation\nand Summarization\nThe objective of this tech test is to evaluate the candidate's technical skills and\napproach to developing an agent-based framework for generating questions (MCQs and\nfill-in-the-blanks) and summarizing key topics from a given PDF file using Large\nLanguage Models (LLMs) and RAG using relevant libraries in Python.\nPlease Do:\n●\nInclude Instructions: Provide instructions on how to run the code.\n●",
    "●\nKeep it Simple: Ensure the solution is simple and concise.\n●\nSubmit Within Time: Return the zipped solution within 72 hours by email to\ntechnicaltest@alefeducation.com or provide a link to a Google Drive folder with\nthe zipped solution.\n●\nAsk Questions: If you have any questions, email\ntechnicaltest@alefeducation.com.\nPlease Don’t:\n●\nDo not use public source control systems (e.g., GitHub).\n●\nDo not build a user interface; the focus is on the technical solution and not the\ninterface.\n●",
    "interface.\n●\nDo not spend more than 2-3 hours on the test; the goal is to understand your\napproach and way of thinking.\n●\nPerform Unnecessary Tasks: Do not perform exploratory data analysis, model\nevaluation.\n●\nCheat: Do not cheat; cheaters will be immediately dismissed and blacklisted by\nAlef.",
    "Technical Requirements:\n1. Design an agent-based framework that integrates with LLMs to generate\nquestions and summaries from an uploaded file.\n2. Use libraries like Langchain, LangGraph, Huggingface, FastAPI to facilitate the\ndevelopment.\n3. Use openly available LLMs available via APIs from providers like Groq, Google AI,\nor Huggingface.\n4. Use an open-source vector database to store and retrieve relevant information\nefficiently.\n5. Create a Dockerfile with commands to run the application and expose the",
    "endpoints.\nEndpoints:\n1. /ingest: Upload and process the PDF file.\n2. /generate/questions: Generate either MCQ and Fill-in-the-blank type questions\nbased on the PDF.\n3. /generate/summary: Generate summaries based on a given topic from the\nuploaded PDF.\nFunctional Test Conditions:\n●\nUpload a sample PDF file \"A quick Algebra Review\" and ingest into a Vector DB\nwith appropriate metadata.\n●\nGenerate MCQs and fill-in-the-blank questions based on the topics in the PDF file\n●",
    "●\nGenerate summaries for any specified topics.\nAssessment Criteria:\n●\nShould cover all Technical requirements.\n●\nShould cover the functional test case.\n●\nDemonstrate clean coding and test driven development.\n●\nShould be organized to demonstrate as a python production code file rather than\na .ipynb file used for experimentation."
]